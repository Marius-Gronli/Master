# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder.
"""
import arcpy
import os

def possible_field_locations(database_path:str,
                            filename_cond_debrisflow:str,
                            filename_cond_date:str,
                            filename_cond_geo_location:str,
                            ):
    """ Function for generating possible field location.

    Parameters
    ----------
    database_path : str
        Path to database of field locations.

    filename_cond_debrisflow : str
        Filename of results generated from conditioning possible field locations
        to debrisflows.

    filename_cond_date : str
        Filename of results generated from conditioning possible field locations
        by date later than 2019.

    filename_cond_geo_location : str
        Filename of results generated from conditioning possible field locations
        to a geografical location.

    """

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    Skredhendelser_skredobshistorisk_NVE_Database_ = "skredhendelser_skredobshistorisk"
    Polygon_og_South_West_and_East_Norway = "Øst_sør_vest"

    # Process: Select Debrisflows (flood, soil, clay and sediement) slides) (Select) (analysis)
    Debrisflows = os.path.join(database_path, filename_cond_debrisflow)
    arcpy.analysis.Select(in_features=Skredhendelser_skredobshistorisk_NVE_Database_, out_feature_class=Debrisflows, where_clause="""skredtype =142 OR
skredtype =144 OR
skredtype =143 OR
skredtype =140 """)

    # Process: Select recent slides (>= 2019) (Select) (analysis)
    Recent_slides =  os.path.join(database_path, filename_cond_date)
    arcpy.analysis.Select(in_features=Debrisflows, out_feature_class=Recent_slides, where_clause="skredtidspunkt >= date '2019-01-01 01:00:00'")

    # Process: Clip to drivable locations (Clip) (analysis)
    Possible_Field_Locations_Final_Result = os.path.join(database_path, filename_cond_geo_location)
    arcpy.analysis.Clip(in_features=Recent_slides, clip_features=Polygon_og_South_West_and_East_Norway, out_feature_class=Possible_Field_Locations_Final_Result, cluster_tolerance="")

if __name__ == '__main__':
    # Global Environment settings
    master_env = None # change
    database_path = None # change
    filename_cond_debrisflow = None # change
    filename_cond_date = None # change
    filename_cond_geo_location = None # change

    with arcpy.EnvManager(scratchWorkspace=master_env,
    workspace=master_env):
        possible_field_locations()
